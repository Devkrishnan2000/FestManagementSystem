<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <!--close maximise minimize btn style-->
    
    <ControlTemplate x:Key="window_btn_template" TargetType="{x:Type Button}">
        <Border Width="14" Height="14" Background="{TemplateBinding Background}" CornerRadius="2" Margin="5,10,0,10"/>
    </ControlTemplate>
    
    <Style x:Key="minimize_btn_style" TargetType="Button">
        <Setter Property="Background" Value="#f1c40f"></Setter>
        <Setter Property="Template" Value="{DynamicResource window_btn_template}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#d6ac00"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="maximize_btn_style" TargetType="Button">
        <Setter Property="Background" Value="#2ecc71"></Setter>
        <Setter Property="Template" Value="{DynamicResource window_btn_template}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#009e43"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="close_btn_style" TargetType="Button">
        <Setter Property="Background" Value="#e74c3c"></Setter>
        <Setter Property="Template" Value="{DynamicResource window_btn_template}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="#d41602"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
      <!--end of style-->

      <!--darkmode light mode button style--> 
    
    <Style x:Key="dark_light_btn_style" TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--end of style-->

    <!--tab btns style-->
    
    <Style x:Key="tab_btns" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource primary_color_btn}"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        
        <Setter Property="FontSize" Value="24"></Setter>
        <Setter Property="Padding" Value="0,10,0,10"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border  CornerRadius="2" BorderThickness="0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" >
                        <ContentPresenter Content="{TemplateBinding Content}"  VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource primary_hover_color}"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource click_color}"></Setter>
            </Trigger>
        
        </Style.Triggers>

    </Style>
    
    <!--End of style-->

    <!--large buttton style-->
    <Style x:Key="buttonborder" TargetType="Border">
        <Setter Property="Background" Value="#FFEAEAEA"/>
        <Setter Property="BorderBrush" Value="#FFEAEAEA"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#dedede"/>
                <Setter Property="BorderBrush" Value="#dedede"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--textbox style-->
    
    <Style x:Key="textbox_style" TargetType="TextBox">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="MaxWidth" Value="450"/>
        <Setter Property="FontFamily" Value= "/Register_app;component/resources/#Open Sans"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" CornerRadius="2" BorderBrush="{DynamicResource primary_color}" BorderThickness="2" Background="{DynamicResource primary_background}"
>
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ResourceKey=primary_hover_color}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource textbox_text_color}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--end of style-->

    <!--PasswordBox Style-->

    <Style x:Key="paswrd_style" TargetType="PasswordBox">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinHeight" Value="30"/>
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MaxWidth" Value="450"/>
        <Setter Property="FontFamily" Value= "/Register_app;component/resources/#Open Sans"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border" CornerRadius="2" BorderBrush="{DynamicResource primary_color}" BorderThickness="2" Background="{DynamicResource primary_background}"
>
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ResourceKey=primary_hover_color}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource textbox_text_color}" />
                            <Setter Property="BorderBrush" TargetName="border" Value="black"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--combobox style-->
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="{DynamicResource bottom_bar_color}" />
        <Setter Property="BorderThickness" Value="1"></Setter>
        <Setter Property="FontFamily" Value="/Register_app;component/resources/#Open Sans"/>
        <Setter Property="Background" Value="{DynamicResource secondary_background}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MinWidth" Value="100"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="MaxWidth" Value="450"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">

                    <Border x:Name="border" BorderThickness="2" BorderBrush="#909090" CornerRadius="3" >
                        <Grid>

                            <ToggleButton
                            Name="ToggleButton"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            Opacity="0.1"
                            Foreground="{TemplateBinding Foreground}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            </ToggleButton>

                            <Path x:Name="Arrow" 
                             Grid.Column="1"      
                             Fill="Black"
                              Margin="0,0,5,0"
                             HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>

                            <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Center" />

                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Background="{DynamicResource primary_background}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Margin="3,3,23,3"
                            BorderThickness="0"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            
                            PopupAnimation="Fade">
                                <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                    x:Name="DropDownBorder"
                                    Background="#f5f6fa"
                                    BorderThickness="2,0,2,2"
                                    BorderBrush="#f5f6fa"/>
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel x:Name="items" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ResourceKey=primary_hover_color}"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Background" Value="{DynamicResource ResourceKey=primary_background}"/>
                            <Setter  Property="Background" Value="{DynamicResource primary_background}"/>
                            <Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource ResourceKey=primary_hover_color}"/>
                            <Setter Property="ItemContainerStyle" Value="{DynamicResource combobox_item}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="FontFamily" Value="/Register_app;component/resources/#Open Sans"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                    SnapsToDevicePixels="true"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="0"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                       Value="true">
                            <Setter Property="Background"
                        Value="{DynamicResource primary_color_btn}" />
                            <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            <Setter Property="BorderThickness"
                        Value="2" />
                            <Setter Property="BorderBrush"
                        Value="{DynamicResource primary_color_btn}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                       Value="false">
                            <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--end of style-->

    <!--label style-->
    
    <Style x:Key="textbox_label" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="/Register_app;component/resources/#Modern Sans"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="10"/>
    </Style>
    
    <!--end of style-->

    
    <!--add btn and remov btn (plus and minus)-->

    <ControlTemplate x:Key="add_btn_template" TargetType="Button">
        <Image x:Name="button_img" Source="resources/icons/add_eve_btn.png" Stretch="None"/>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="button_img"  Property="Source" Value="resources/icons/add_eve_btn_hover.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="remov_btn_template" TargetType="Button">
        <Image x:Name="button_img" Source="resources/icons/remov_btn.png" Stretch="None"/>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="button_img" Property="Source" Value="resources/icons/remov_btn_hover.png"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--end of style-->
    
    <!--radio_button style-->

    <Style x:Key="{x:Type RadioButton}"
       TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="FocusVisualStyle"
          Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="16"
                  Height="16">
                                <Rectangle x:Name="Border" StrokeThickness="1.5" RadiusX="3" RadiusY="3">
                                    <Rectangle.Stroke>
                                        <SolidColorBrush Color="{DynamicResource border_color}"/>
                                    </Rectangle.Stroke>
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource background}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="CheckMark" Visibility="Collapsed" RadiusX="3" RadiusY="3">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource sel_color}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Stroke" Value="#5352ed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end of style-->
    
    <!--list box style-->

    <Style x:Key="{x:Type ListBox}"
       TargetType="ListBox">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
          Value="true" />
        <Setter Property="MinWidth"
          Value="120" />
        <Setter Property="MinHeight"
          Value="95" />
        <Setter Property="Margin" Value="10"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="/Register_app;component/resources/#Open Sans"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border"
                BorderThickness="2"
                CornerRadius="2">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource background}" />
                        </Border.Background>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource border_color}" />
                        </Border.BorderBrush>
                        <ScrollViewer Margin="0"
                        Focusable="false">
                            <StackPanel Margin="2"
                        IsItemsHost="True" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                   Value="false">
                            <Setter TargetName="Border"
                    Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource background}" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border"
                    Property="BorderBrush">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource border_color}" />
                                </Setter.Value>

                            </Setter>
                        </Trigger>
                        <Trigger Property="IsGrouping"
                   Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBoxItem}"
       TargetType="ListBoxItem">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="OverridesDefaultStyle"
          Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                Padding="2"
                SnapsToDevicePixels="true">
                        <Border.Background>
                            <SolidColorBrush Color="Transparent" />
                        </Border.Background>
                         
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource primary_background}"/>
                            <Setter  TargetName="Border"   Property="Background" Value="{DynamicResource primary_color_btn}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ResourceKey=primary_color_btn}"/>
                            <Setter Property="Foreground" Value="{DynamicResource primary_background}"/>
                        </Trigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end of style-->
<!-- add event and remove event-->

    <Style x:Key="small_btn" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource primary_color_btn}"/>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="2" >
                        <ContentPresenter x:Name="button_content" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end of style-->
    <Image x:Key="delImg" >
        <Image.Source>
            <BitmapImage UriSource="/resources/icons/sample.png"></BitmapImage>
        </Image.Source>
    </Image>

</ResourceDictionary>